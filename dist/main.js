/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/dom.js":
/*!********************!*\
  !*** ./src/dom.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateList\": () => /* binding */ generateList,\n/* harmony export */   \"clearList\": () => /* binding */ clearList,\n/* harmony export */   \"clearListHolder\": () => /* binding */ clearListHolder,\n/* harmony export */   \"generateSidebar\": () => /* binding */ generateSidebar,\n/* harmony export */   \"generateProjectList\": () => /* binding */ generateProjectList,\n/* harmony export */   \"addNewProject\": () => /* binding */ addNewProject,\n/* harmony export */   \"editTask\": () => /* binding */ editTask\n/* harmony export */ });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main */ \"./src/main.js\");\n// Module Imports\n\n\n\nconst generateList = (() => {\n\n    // Elements\n    const mainContainer = document.querySelector(\".main-container\");\n\n    // Append list wrapper div to main container\n    const listWrapper = document.createElement(\"div\");\n    listWrapper.setAttribute(\"class\", \"list-wrapper\");\n    mainContainer.appendChild(listWrapper);\n\n    // Append list header row div to wrapper\n    const listHeaderRowDiv = document.createElement(\"div\");\n    listHeaderRowDiv.setAttribute(\"class\", \"list-header-row-div\");\n    listWrapper.appendChild(listHeaderRowDiv);\n\n    // Append list header row to div\n    const listHeaderRow = document.createElement(\"p\");\n    let listHeaderRowText = document.createTextNode(`${_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.title}`);\n    listHeaderRow.appendChild(listHeaderRowText);\n    listHeaderRow.setAttribute(\"class\", \"list-header-row\");\n    listHeaderRowDiv.appendChild(listHeaderRow);\n\n    // Append list holder to wrapper\n    const listHolder = document.createElement(\"ul\");\n    listHolder.setAttribute(\"class\", \"list-holder\");\n    listWrapper.appendChild(listHolder);\n\n    if (_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.items) {\n        for (let i=0; i<_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.items.length; i++) {\n\n            // Append list item container to holder\n            const itemContainer = document.createElement(\"li\");\n            itemContainer.setAttribute(\"class\", \"item-container\");\n            listHolder.appendChild(itemContainer);\n    \n            // Append item checkbox to item container\n            const itemCheckbox = document.createElement(\"li\");\n            itemCheckbox.setAttribute(\"class\", \"item-checkbox\");\n            itemContainer.appendChild(itemCheckbox);\n    \n            // Append item checkbox div to checkbox\n            const itemCheckboxDiv = document.createElement(\"div\");\n            if (`${_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.items[i].priority}` === \"Priority 1\") {\n                itemCheckboxDiv.setAttribute(\"class\", \"item-checkbox-div priority-one\");\n            }\n            else if (`${_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.items[i].priority}` === \"Priority 2\") {\n                itemCheckboxDiv.setAttribute(\"class\", \"item-checkbox-div priority-two\");\n            }\n            else if (`${_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.items[i].priority}` === \"Priority 3\") {\n                itemCheckboxDiv.setAttribute(\"class\", \"item-checkbox-div priority-three\");\n            }\n            else {\n                itemCheckboxDiv.setAttribute(\"class\", \"item-checkbox-div priority-four\");\n            }\n            itemCheckboxDiv.onclick = function() {(0,_main__WEBPACK_IMPORTED_MODULE_0__.toggleComplete)(_main__WEBPACK_IMPORTED_MODULE_0__.activeProject, i)};\n            itemCheckbox.appendChild(itemCheckboxDiv);\n    \n            // Append item to item container\n            const item = document.createElement(\"li\");\n            const itemText = document.createTextNode(`${_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.items[i].title}`);\n            item.appendChild(itemText);\n            console.log(`${_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.items[i].complete}`);\n            if (`${_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.items[i].complete}` == \"true\") {\n                item.setAttribute(\"class\", \"item completed\");\n            }\n            else {\n                item.setAttribute(\"class\", \"item\");\n            }\n            item.onclick = function() {(0,_main__WEBPACK_IMPORTED_MODULE_0__.editListItem)(_main__WEBPACK_IMPORTED_MODULE_0__.activeProject, i)};\n            itemContainer.appendChild(item);\n    \n            // Append due date to item container\n            const itemDueDate = document.createElement(\"p\");\n            const itemDueDateText = document.createTextNode(`${_main__WEBPACK_IMPORTED_MODULE_0__.activeProject.items[i].dueDate}`);\n            itemDueDate.appendChild(itemDueDateText);\n            itemDueDate.setAttribute(\"class\", \"item-due-date\");\n            itemContainer.appendChild(itemDueDate);\n    \n            // Append item delete button div to item container\n            const itemDeleteButtonDiv = document.createElement(\"div\");\n            itemDeleteButtonDiv.setAttribute(\"class\", \"item-delete-button-div\");\n            itemDeleteButtonDiv.onclick = function() {(0,_main__WEBPACK_IMPORTED_MODULE_0__.deleteListItem)(_main__WEBPACK_IMPORTED_MODULE_0__.activeProject, i)};\n            itemContainer.appendChild(itemDeleteButtonDiv);\n    \n            // Append item delete button first level to item delete button div\n            const itemDeleteButtonFirst = document.createElement(\"div\");\n            itemDeleteButtonFirst.setAttribute(\"class\", \"item-delete-button-first\");\n            itemDeleteButtonDiv.appendChild(itemDeleteButtonFirst);\n    \n            // Append item delete button second level to first level\n            const itemDeleteButtonSecond = document.createElement(\"div\");\n            itemDeleteButtonSecond.setAttribute(\"class\", \"item-delete-button-second\");\n            itemDeleteButtonFirst.appendChild(itemDeleteButtonSecond);\n        }\n    }\n\n    console.log(_main__WEBPACK_IMPORTED_MODULE_0__.activeProject);\n    \n    // Append add item li to wrapper    \n    const addItem = document.createElement(\"li\");\n    const addItemText = document.createTextNode(\"+ Add Task\");\n    addItem.appendChild(addItemText);\n    addItem.setAttribute(\"class\", \"add-item-li\");\n    addItem.onclick = function() {addNewTask();};\n    listHolder.appendChild(addItem);\n\n    return {\n    }\n\n});\n\nconst clearList = (() => {\n\n    // Elements\n    const mainContainer = document.querySelector(\".main-container\");\n\n    // Clear display\n    mainContainer.textContent = '';\n});\n\nconst clearListHolder = (() => {\n\n    // Elements\n    const listHolder = document.querySelector(\".list-holder\");\n\n    // Clear display\n    listHolder.textContent = '';\n});\n\nconst addNewTask = (() => {\n\n    // Check if triggered before\n    if (document.querySelector(\".add-item-new-wrapper\")) {\n\n        // Elements\n        const addItemNewWrapper = document.querySelector(\".add-item-new-wrapper\");\n\n        // Hide add item button\n        addItemNewWrapper.style.display = \"block\";\n\n        return\n    }\n\n    // Elements\n    const addItemLi = document.querySelector(\".add-item-li\");\n    const listHolder = document.querySelector(\".list-holder\");\n\n    // Hide add item button\n    addItemLi.style.display = \"none\";\n\n    // Create new wrapper\n    const addItemNewWrapper = document.createElement(\"div\");\n    addItemNewWrapper.setAttribute(\"class\", \"add-item-new-wrapper\");\n    listHolder.appendChild(addItemNewWrapper);\n\n    // Add form\n    const addItemForm = document.createElement(\"form\");\n    addItemForm.setAttribute(\"class\", \"add-item-form\");\n    addItemNewWrapper.appendChild(addItemForm);\n\n    // Create top row div\n    const addItemNewTopRowDiv = document.createElement(\"div\");\n    addItemNewTopRowDiv.setAttribute(\"class\", \"add-item-new-top-row\");\n    addItemNewWrapper.appendChild(addItemNewTopRowDiv);\n\n    // Add title entry to form within top row div\n    const formTitle = document.createElement(\"input\");\n    formTitle.setAttribute(\"type\",\"text\");\n    formTitle.setAttribute(\"placeholder\",\"e.g. Renew gym membership\");\n    formTitle.setAttribute(\"name\",\"title\");\n    formTitle.setAttribute(\"class\", \"add-item-form-title\");\n    addItemNewTopRowDiv.appendChild(formTitle);\n\n    // Create bottom row div\n    const addItemNewBottomRowDiv = document.createElement(\"div\");\n    addItemNewBottomRowDiv.setAttribute(\"class\", \"add-item-new-bottom-row\");\n    addItemNewWrapper.appendChild(addItemNewBottomRowDiv);\n\n    // Add date entry to form within bottom row div\n    const formDate = document.createElement(\"input\");\n    formDate.setAttribute(\"type\",\"date\");\n    formDate.setAttribute(\"name\",\"due-date\");\n    formDate.setAttribute(\"class\", \"add-item-form-date\");\n    addItemNewBottomRowDiv.appendChild(formDate);\n\n    // Add project entry to form within bottom row div\n    const formProject = document.createElement(\"select\");\n    formProject.setAttribute(\"name\",\"project\");\n    formProject.setAttribute(\"placeholder\",\"Project\");\n    formProject.setAttribute(\"class\", \"add-item-form-project\");\n    for (let i=0; i<_main__WEBPACK_IMPORTED_MODULE_0__.projects.length; i++) {\n        let userProjectOption = document.createElement(\"option\");\n        userProjectOption.value = `${_main__WEBPACK_IMPORTED_MODULE_0__.projects[i].title}`;\n        userProjectOption.text = `${_main__WEBPACK_IMPORTED_MODULE_0__.projects[i].title}`;\n        formProject.appendChild(userProjectOption);\n    }\n    addItemNewBottomRowDiv.appendChild(formProject);\n\n    // Add priority to form within bottom row div\n    const formPriority = document.createElement(\"select\");\n    formPriority.setAttribute(\"name\",\"project\");\n    formPriority.setAttribute(\"placeholder\",\"Priority\");\n    formPriority.setAttribute(\"class\", \"add-item-form-priority\");\n    const priorityOption1 = document.createElement(\"option\");\n    priorityOption1.value = \"Priority 1\";\n    priorityOption1.text = \"Priority 1\";\n    formPriority.appendChild(priorityOption1);\n    const priorityOption2 = document.createElement(\"option\");\n    priorityOption2.value = \"Priority 2\";\n    priorityOption2.text = \"Priority 2\";\n    formPriority.appendChild(priorityOption2);\n    const priorityOption3 = document.createElement(\"option\");\n    priorityOption3.value = \"Priority 3\";\n    priorityOption3.text = \"Priority 3\";\n    formPriority.appendChild(priorityOption3);\n    const priorityOption4 = document.createElement(\"option\");\n    priorityOption4.value = \"Priority 4\";\n    priorityOption4.text = \"Priority 4\";\n    formPriority.appendChild(priorityOption4);\n    addItemNewBottomRowDiv.appendChild(formPriority);\n\n    // Add submit button to form within bottom row div\n    const formSubmitButton = document.createElement(\"input\");\n    formSubmitButton.setAttribute(\"type\",\"submit\");\n    formSubmitButton.setAttribute(\"value\",\"Submit\");\n    formSubmitButton.setAttribute(\"class\", \"add-item-form-submit-button\");\n    addItemNewBottomRowDiv.appendChild(formSubmitButton);\n\n    // Add event listener\n    formSubmitButton.onclick = function(){\n        (0,_main__WEBPACK_IMPORTED_MODULE_0__.addListItem)().submitListItem();\n        hideNewTaskBox();\n        clearList();\n        generateList();\n    };\n\n    return {\n    }\n});\n\nconst hideNewTaskBox = (() => {\n\n    // Elements\n    const addItemLi = document.querySelector(\".add-item-li\");\n    const addItemNewWrapper = document.querySelector(\".add-item-new-wrapper\");\n\n    if(addItemNewWrapper) {\n        // Hide new task box\n        addItemNewWrapper.style.display = \"none\";\n    }\n\n    // Unhide add item button\n    addItemLi.style.display = \"block\";\n\n    return {\n    }\n});\n\nconst editTask = ((activeProject, i) => {\n\n    // Form Information\n    let formTitle = activeProject.items[i].title;\n    let formDate = activeProject.items[i].dueDate;\n\n    // Elements\n    const addItemLi = document.querySelector(\".add-item-li\");\n    const listHolder = document.querySelector(\".list-holder\");\n\n    // Create new wrapper\n    const editItemNewWrapper = document.createElement(\"div\");\n    editItemNewWrapper.setAttribute(\"class\", \"edit-item-new-wrapper\");\n    listHolder.appendChild(editItemNewWrapper);\n\n    // Add form\n    const editItemForm = document.createElement(\"form\");\n    editItemForm.setAttribute(\"class\", \"edit-item-form\");\n    editItemNewWrapper.appendChild(editItemForm);\n\n    // Create top row div\n    const editItemNewTopRowDiv = document.createElement(\"div\");\n    editItemNewTopRowDiv.setAttribute(\"class\", \"edit-item-new-top-row\");\n    editItemNewWrapper.appendChild(editItemNewTopRowDiv);\n\n    // Add title entry to form within top row div\n    const editFormTitle = document.createElement(\"input\");\n    editFormTitle.setAttribute(\"type\",\"text\");\n    editFormTitle.setAttribute(\"name\",\"title\");\n    editFormTitle.setAttribute(\"class\", \"edit-item-form-title\");\n    editFormTitle.setAttribute(\"value\", formTitle);\n    editItemNewTopRowDiv.appendChild(editFormTitle);\n\n    // Create bottom row div\n    const editItemNewBottomRowDiv = document.createElement(\"div\");\n    editItemNewBottomRowDiv.setAttribute(\"class\", \"edit-item-new-bottom-row\");\n    editItemNewWrapper.appendChild(editItemNewBottomRowDiv);\n\n    // Add date entry to form within bottom row div\n    const editFormDate = document.createElement(\"input\");\n    editFormDate.setAttribute(\"type\",\"date\");\n    editFormDate.setAttribute(\"name\",\"due-date\");\n    editFormDate.setAttribute(\"class\", \"edit-item-form-date\");\n    editFormDate.setAttribute(\"value\", formDate);\n    editItemNewBottomRowDiv.appendChild(editFormDate);\n\n    // Add submit button to form within bottom row div\n    const editFormSubmitButton = document.createElement(\"input\");\n    editFormSubmitButton.setAttribute(\"type\",\"submit\");\n    editFormSubmitButton.setAttribute(\"value\",\"Submit\");\n    editFormSubmitButton.setAttribute(\"class\", \"edit-item-form-submit-button\");\n    editItemNewBottomRowDiv.appendChild(editFormSubmitButton);\n\n    //Add event listener\n    editFormSubmitButton.onclick = function(){\n\n        // Form Information\n        activeProject.items[i].title = editFormTitle.value;\n        activeProject.items[i].dueDate = editFormDate.value;\n\n        // editListItem().submitEditListItem(activeProject, i);\n        // hideNewTaskBox();\n        clearList();\n        generateList();\n    };\n\n    return {\n    }\n});\n\nconst generateSidebar = (() => {\n\n    // Elements\n    const sidebarContainer = document.querySelector(\".sidebar-container\");\n\n    // Create link container\n    const linkContainer = document.createElement(\"div\");\n    linkContainer.setAttribute(\"class\", \"sidebar-links\");\n    sidebarContainer.appendChild(linkContainer);\n\n    // Create link for all items\n    const allItems = document.createElement(\"div\");\n    allItems.setAttribute(\"class\", \"sidebar-item\");\n    let allItemsText = document.createTextNode(\"All\");\n    allItems.addEventListener(\"click\", _main__WEBPACK_IMPORTED_MODULE_0__.showAllProjects);\n    allItems.appendChild(allItemsText);\n    linkContainer.appendChild(allItems);\n\n    // Create link for today's items\n    const todayItems = document.createElement(\"div\");\n    todayItems.setAttribute(\"class\", \"sidebar-item\");\n    let todayItemsText = document.createTextNode(\"Today\");\n    todayItems.appendChild(todayItemsText);\n    linkContainer.appendChild(todayItems);\n\n    // Create link for weeks's items\n    const weekItems = document.createElement(\"div\");\n    weekItems.setAttribute(\"class\", \"sidebar-item\");\n    let weekItemsText = document.createTextNode(\"Week\");\n    weekItems.appendChild(weekItemsText);\n    linkContainer.appendChild(weekItems);\n\n    // Create link for complete items\n    const completeItems = document.createElement(\"div\");\n    completeItems.setAttribute(\"class\", \"sidebar-item\");\n    let completeItemsText = document.createTextNode(\"Complete\");\n    completeItems.addEventListener(\"click\", _main__WEBPACK_IMPORTED_MODULE_0__.showCompletedProject);\n    completeItems.appendChild(completeItemsText);\n    linkContainer.appendChild(completeItems);\n\n    // Create link for incomplete items\n    const incompleteItems = document.createElement(\"div\");\n    incompleteItems.setAttribute(\"class\", \"sidebar-item\");\n    let incompleteItemsText = document.createTextNode(\"Incomplete\");\n    incompleteItems.addEventListener(\"click\", _main__WEBPACK_IMPORTED_MODULE_0__.showIncompletedProject);\n    incompleteItems.appendChild(incompleteItemsText);\n    linkContainer.appendChild(incompleteItems);\n\n    // Create sidebar project holder\n    const sidebarProjectHolder = document.createElement(\"div\");\n    sidebarProjectHolder.setAttribute(\"class\", \"sidebar-project-holder\");\n    linkContainer.appendChild(sidebarProjectHolder);\n\n    // Create sidebar add project link\n    const sidebarAddProjectLink = document.createElement(\"div\");\n    sidebarAddProjectLink.setAttribute(\"class\", \"sidebar-add-project\");\n    let sidebarAddProjectLinkText = document.createTextNode(\"+ Add Project\");\n    sidebarAddProjectLink.appendChild(sidebarAddProjectLinkText);\n    sidebarAddProjectLink.addEventListener(\"click\", addNewProject);\n    linkContainer.appendChild(sidebarAddProjectLink);\n});\n\nconst generateProjectList = (() => {\n\n    // Elements\n    const sidebarProjectHolder = document.querySelector(\".sidebar-project-holder\");\n\n    // Iterate through length of current projects\n    for (let i=0; i<_main__WEBPACK_IMPORTED_MODULE_0__.projects.length; i++) {\n\n        if (sidebarProjectHolder.textContent == '') {\n            // Create sidebar project holder\n            let sidebarProjectHolderText = document.createTextNode(\"Projects\");\n            sidebarProjectHolder.appendChild(sidebarProjectHolderText);\n        }\n\n        // Append project to sidebar project holder\n        const project = document.createElement(\"div\");\n        const projectText = document.createTextNode(`- ${_main__WEBPACK_IMPORTED_MODULE_0__.projects[i].title}`);\n        project.appendChild(projectText);\n        project.setAttribute(\"class\", \"sidebar-project\");\n        sidebarProjectHolder.appendChild(project);\n\n        // Add event listener\n        project.onclick = function(){\n            (0,_main__WEBPACK_IMPORTED_MODULE_0__.changeActiveProject)(_main__WEBPACK_IMPORTED_MODULE_0__.projects[i]);\n            clearList();\n            generateList();\n        };\n    }\n\n    return {\n    }\n});\n\nconst clearProjectList = (() => {\n\n    // Elements\n    const sidebarProjectHolder = document.querySelector(\".sidebar-project-holder\");\n\n    // Clear display\n    sidebarProjectHolder.textContent = '';\n});\n\nconst addNewProject = (() => {\n\n    // Check if triggered before\n    if (document.querySelector(\".add-project-new-wrapper\")) {\n\n        // Elements\n        const addProjectNewWrapper = document.querySelector(\".add-project-new-wrapper\");\n\n        // Hide add item button\n        addProjectNewWrapper.style.display = \"block\";\n\n        return\n    }\n\n    // Elements\n    const addProjectDiv = document.querySelector(\".sidebar-add-project\");\n    const sidebarProjectHolder = document.querySelector(\".sidebar-project-holder\");\n\n    // Hide add project div\n    addProjectDiv.style.display = \"none\";\n\n    // Create new wrapper\n    const addProjectNewWrapper = document.createElement(\"div\");\n    addProjectNewWrapper.setAttribute(\"class\", \"add-project-new-wrapper\");\n    sidebarProjectHolder.appendChild(addProjectNewWrapper);\n\n    // Add form\n    const addProjectForm = document.createElement(\"form\");\n    addProjectForm.setAttribute(\"class\", \"add-project-form\");\n    addProjectNewWrapper.appendChild(addProjectForm);\n\n    // Add project title entry to form\n    const projectFormTitle = document.createElement(\"input\");\n    projectFormTitle.setAttribute(\"type\",\"text\");\n    projectFormTitle.setAttribute(\"placeholder\",\"e.g. Travelling\");\n    projectFormTitle.setAttribute(\"name\",\"title\");\n    projectFormTitle.setAttribute(\"class\", \"add-project-form-title\");\n    addProjectNewWrapper.appendChild(projectFormTitle);\n\n    // Add submit button to form\n    const projectFormSubmitButton = document.createElement(\"input\");\n    projectFormSubmitButton.setAttribute(\"type\",\"submit\");\n    projectFormSubmitButton.setAttribute(\"value\",\"Submit\");\n    projectFormSubmitButton.setAttribute(\"class\", \"add-project-form-submit-button\");\n    addProjectNewWrapper.appendChild(projectFormSubmitButton);\n\n    // Add event listener\n    projectFormSubmitButton.onclick = function(){\n        (0,_main__WEBPACK_IMPORTED_MODULE_0__.addProject)().submitProject();\n        hideNewProjectBox();\n        clearProjectList();\n        generateProjectList();\n    };\n\n    return {\n    }\n});\n\nconst hideNewProjectBox = (() => {\n\n    // Elements\n    const addProjectDiv = document.querySelector(\".sidebar-add-project\");\n    const addProjectNewWrapper = document.querySelector(\".add-project-new-wrapper\");\n\n    // Hide new projet box\n    addProjectNewWrapper.style.display = \"none\";\n\n    // Unhide add project button\n    addProjectDiv.style.display = \"block\";\n\n    return {\n    }\n});\n\n\n// Module Exports\n\n\n//# sourceURL=webpack://todo-list/./src/dom.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ \"./src/dom.js\");\n// Module Imports\n\n\n(0,_dom__WEBPACK_IMPORTED_MODULE_0__.generateSidebar)();\n(0,_dom__WEBPACK_IMPORTED_MODULE_0__.generateList)();\n(0,_dom__WEBPACK_IMPORTED_MODULE_0__.generateProjectList)();\n\n// Elements\nconst sidebar = document.querySelector(\".sidebar-container\");\nconst sidebarAddProjectButton = document.querySelector(\".sidebar-add-project\");\n\n// Website Initialisation\nwindow.addEventListener('DOMContentLoaded', (event) => {\n    \n    sidebar.classList.add(\"website-loaded\");\n\n});\n\n\n\n//# sourceURL=webpack://todo-list/./src/index.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"projects\": () => /* binding */ projects,\n/* harmony export */   \"activeProject\": () => /* binding */ activeProject,\n/* harmony export */   \"changeActiveProject\": () => /* binding */ changeActiveProject,\n/* harmony export */   \"showAllProjects\": () => /* binding */ showAllProjects,\n/* harmony export */   \"showCompletedProject\": () => /* binding */ showCompletedProject,\n/* harmony export */   \"showIncompletedProject\": () => /* binding */ showIncompletedProject,\n/* harmony export */   \"createProject\": () => /* binding */ createProject,\n/* harmony export */   \"addProject\": () => /* binding */ addProject,\n/* harmony export */   \"createListItem\": () => /* binding */ createListItem,\n/* harmony export */   \"addListItem\": () => /* binding */ addListItem,\n/* harmony export */   \"deleteListItem\": () => /* binding */ deleteListItem,\n/* harmony export */   \"editListItem\": () => /* binding */ editListItem,\n/* harmony export */   \"toggleComplete\": () => /* binding */ toggleComplete\n/* harmony export */ });\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ \"./src/dom.js\");\n// Module Imports\n\n\n\n// Projects\nlet projects = [];\n\n\n// Item Number\nlet itemNumber = 0;\n\n\n// Create Project\nconst createProject = (title) => {\n\n    projects.push({\n        title,\n        items: []\n    })\n\n    return {\n    }\n}\n\n\n// All Items\nconst allItems = (() => {\n\n    let itemArray = {title:\"All\", items:[]};\n    for (let i=0; i<projects.length; i++) {\n        for (let j=0; j<projects[i].items.length; j++) {\n            itemArray.items.push(projects[i].items[j]);\n        }\n    }\n    return {\n        itemArray\n    }\n});\n\n\n// Complete Items\nconst completeItems = (() => {\n\n    let completeItemArray = {title:\"Complete\", items:[]};\n    for (let i=0; i<projects.length; i++) {\n        for (let j=0; j<projects[i].items.length; j++) {\n            if (projects[i].items[j].complete == true) {\n                completeItemArray.items.push(projects[i].items[j]);\n            }\n        }\n    }\n    return {\n        completeItemArray\n    }\n});\n\n\n// Incomplete Items\nconst incompleteItems = (() => {\n\n    let incompleteItemArray = {title:\"Incomplete\", items:[]};\n    for (let i=0; i<projects.length; i++) {\n        for (let j=0; j<projects[i].items.length; j++) {\n            if (projects[i].items[j].complete == false) {\n                incompleteItemArray.items.push(projects[i].items[j]);\n            }\n        }\n    }\n    return {\n        incompleteItemArray\n    }\n});\n\n\n// Create Inbox\nlet inbox = createProject(\"Inbox\");\n\n\n// Active Project\nlet activeProject = projects[0];\n\n\n// Change Active Project\nlet changeActiveProject = function (project) {\n    activeProject = project;\n}\n\n\n// Show All Projects\nlet showAllProjects = function () {\n    activeProject = allItems().itemArray;\n    (0,_dom__WEBPACK_IMPORTED_MODULE_0__.clearList)();\n    (0,_dom__WEBPACK_IMPORTED_MODULE_0__.generateList)();\n}\n\n\n// Show Completed Project\nlet showCompletedProject = function () {\n    activeProject = completeItems().completeItemArray;\n    (0,_dom__WEBPACK_IMPORTED_MODULE_0__.clearList)();\n    (0,_dom__WEBPACK_IMPORTED_MODULE_0__.generateList)();\n}\n\n\n// Show Incompleted Project\nlet showIncompletedProject = function () {\n    activeProject = incompleteItems().incompleteItemArray;\n    (0,_dom__WEBPACK_IMPORTED_MODULE_0__.clearList)();\n    (0,_dom__WEBPACK_IMPORTED_MODULE_0__.generateList)();\n}\n\n\n// Add Project\nconst addProject = (() => {\n\n    // Elements\n    let newProjectTitle = document.querySelector(\".add-project-form-title\").value;\n\n    const submitProject = function () {\n\n        // Ensuring no blank entries\n        if (newProjectTitle == \"\") {\n            newProjectTitle = \"New Project\";\n        }\n\n        // Ensuring no duplicate entries\n        for (let i=0; i<projects.length; i++) {\n            if (newProjectTitle == projects[i].title) {\n                array.splice(i, 1);\n            }\n        }\n        createProject(newProjectTitle);\n    }    \n\n    return {\n        submitProject\n    }\n\n});\n\n// Create List Item\nconst createListItem = (title, dueDate, project, priority) => {\n\n    let item = itemNumber++;\n    let complete = false;\n\n    for (let i=0; i<projects.length; i++) {\n        if (projects[i].title == project) {\n            projects[i].items.push({\n                title,\n                dueDate,\n                project,\n                priority,\n                item,\n                complete\n            })\n        }\n    }\n    allItems();\n    return {\n    }\n}\n\n\n// Add Listen Item\nconst addListItem = (() => {\n    \n    // Elements\n    let newListItemTitle = document.querySelector(\".add-item-form-title\").value;\n    let newListItemDueDate = document.querySelector(\".add-item-form-date\").value;\n    let newListItemProject = document.querySelector(\".add-item-form-project\");\n    let newListItemProjectSelected = newListItemProject.options[newListItemProject.selectedIndex].value;\n    let newListItemPriority = document.querySelector(\".add-item-form-priority\");\n    let newListItemPrioritySeleted = newListItemPriority.options[newListItemPriority.selectedIndex].value;\n\n    const submitListItem = function () {\n        if (newListItemTitle == \"\") {\n            newListItemTitle = \"Default Entry\";\n        }\n        createListItem(newListItemTitle, newListItemDueDate, newListItemProjectSelected, newListItemPrioritySeleted);\n        if (activeProject.title == \"All\") {\n            showAllProjects();\n        }\n    }    \n    return {\n        submitListItem\n    }\n});\n\n\n// Delete List Item\nconst deleteListItem = ((activeProject, i) => {\n\n    if ((activeProject.title == \"All\") || (activeProject.title == \"Incomplete\") || (activeProject.title == \"Complete\")) {\n\n        // Find out what project the selected item is in\n        let itemsProject = activeProject.items[i].project;\n        // Find its item number\n        let itemsNumber = activeProject.items[i].itemNumber;\n        // Find the index of the project\n        for (let i=0; i<projects.length; i++) {\n            if (projects[i].title == itemsProject) {\n                var projectIndex = i;\n            }\n        }\n        // Find the index in the project which matches the item number\n        for (let j=0; j<projects[projectIndex].items.length; j++) {\n            if (projects[projectIndex].items[j].item == itemsNumber) {\n                var itemIndex = j;\n            }\n        }\n        // Delete the item\n        projects[projectIndex].items.splice(itemIndex,1);\n        // Update\n        showAllProjects();\n    }\n    else {\n        activeProject.items.splice(i,1);\n        (0,_dom__WEBPACK_IMPORTED_MODULE_0__.clearList)();\n        (0,_dom__WEBPACK_IMPORTED_MODULE_0__.generateList)();\n    }\n});\n\n\n// Edit List Item\nconst editListItem = ((activeProject, i) => {\n  \n    // Hide array\n    (0,_dom__WEBPACK_IMPORTED_MODULE_0__.clearListHolder)();\n\n    // Show box and populate it with current information\n    (0,_dom__WEBPACK_IMPORTED_MODULE_0__.editTask)(activeProject, i);\n});\n\n\n// Mark Item Complete\nconst toggleComplete = ((activeProject, i) => {\n\n    if (activeProject.items[i].complete == false) {\n        activeProject.items[i].complete = true;\n        (0,_dom__WEBPACK_IMPORTED_MODULE_0__.clearList)();\n        (0,_dom__WEBPACK_IMPORTED_MODULE_0__.generateList)();\n    }\n    else {\n        activeProject.items[i].complete = false;\n        (0,_dom__WEBPACK_IMPORTED_MODULE_0__.clearList)();\n        (0,_dom__WEBPACK_IMPORTED_MODULE_0__.generateList)();\n    }\n});\n\n\n\n\n//# sourceURL=webpack://todo-list/./src/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;